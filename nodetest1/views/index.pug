extends layout

block content

  h1 VideoGami Lite

  a(href="/setup_accounts")
    button(type="button") Add/change Streaming outlets
  br

  a(href="/logo_setup")
    button(type="button") Go to logo setup
  br
  a(href="/editing_station")
    button(type="button") Go to Editing Station
  br
  h2 Stream Status
    h4 Status: #{streamStatus}
    h4 End Points: #{streamDestinations}
    br
  a(href="/labeling/" + name)
    button(type="button" disabled="disabled" id="goStreamingPageBtn") Go to streaming page
  br

  h2 Step 1: Enter Your Input source 
  form(action='/input', method='post', id='input')
    label(for='input ') Enter your HLS input 
    input(type='text', value='', name='input', id='input')
    button(type="submit") submit

  h2 Step 2: Stream Settings
  form(action='/start_stream', method='post', id='streamSettings')
    label(for='input ') Enter your Stream Name
    br
    input(type='text', value='', onchange="checkNameChange()", name='name', id='streamName')
    br
    h3 choose your streaming outlets
    //- label(for='youtube') Youtube 
    //- input(type='checkbox', onchange="enableBtnYT()", value='true', name='youtube', id='youtube') 
    //- br
    //- label(for='Facebook') Facebook  
    //- input(type='hidden', value='', name='rtmplink', id='FBNowInputBox')
    //- input(type='checkbox', onchange="streamFB()", onclick="enableBtnFB()", value='true', name='facebook', id='facebook') 
    //- br
    //- label(for='joicaster') Joicaster 
    //- input(type='checkbox', value='true', onchange="enableBtnJC()", name='joicaster', id='joicaster') 
    //- br
    //- button(type="button", disabled="disabled", onclick="clearSchedule()", id="streamNowBtn") Stream now

    h4 Youtube outlets:
    each outlet in YToutlets
        br
        label(for='Youtube') Youtube: #{outlet.YToutlets.name}  
        input(type='checkbox', onchange="enableBtnYT()", value=outlet.YToutlets.YTrtmp, name='YToutletCredentials', id='YToutlet')
    h4 Facebook outlets:
    each outlet in FBoutlets  
        br
        label(for='FBoutlet') Facebook: #{outlet.FBoutlets.name}  
        input(type='checkbox', value='', onclick="enableBtnFB()", onchange="streamFB(" + outlet.FBoutlets.FBpageId + "," + JSON.stringify(outlet.FBoutlets.FBaccessToken) + "," + JSON.stringify(outlet.FBoutlets.name) + ")", name='FBoutletCredentials', id=JSON.stringify(outlet.FBoutlets.name))
        input(type='hidden', value='', name='rtmplink', id='FBNowInputBox')
    br
    br
    button(type="button", disabled="disabled", onclick="clearSchedule()", id="streamNowBtn") Stream now
    br
    br
    br
    h3 OR Schedule a stream
    br 
    label(for='Month ') Month (1-12)
    input(type='text', value='', name='month', id='month', onchange='checkSchedule()' placeholder="1")
    br
    label(for='Day ') Day (1-31)
    input(type='text', value='', name='day', id='day', onchange='checkSchedule()', placeholder="7")
    br
    label(for='Hour ') Hour (1-23)
    input(type='text', value='', name='hour', id='hour', onchange='checkSchedule()', placeholder="15")
    br
    label(for='Month ') minute (1-59)
    input(type='text', value='', name='minute', id='minute', onchange='checkSchedule()', placeholder="3")
    br
    button(type="button", onclick="checkScheduleInput()", disabled="disabled", id="scheduleStreamBtn") schedule stream 
    br
    h3 OR only convert stream to mp4
  form(action='/convert', method='post', id='convertForm')
    input(type='hidden', value= '', name='name', id='convertName')
    button(type="submit", disabled="disabled", id="convertBtn" ) Convert
  br

  form(action='/cancelstream', method='post', id='CancelStream')
    button(type="submit" disabled="disabled", id='cancelStreamBtn') Cancel scheduled stream 
  br
  a(href="/stop")
    button(type="button") Stop Streaming
  br
  br
  form(action='/convert', method='post', id='convertForm')
    input(type='hidden', value= scheduleStatus, name='scheduleStatus', id='scheduleStatus')
  form(action='/convert', method='post', id='convertForm')
    input(type='hidden', value= streamStatus, name='streamStatus', id='streamStatus')
  
  script(src='https://cdnjs.cloudflare.com/ajax/libs/jquery/3.3.1/jquery.js') 
  script.
    let accr = 0
    let checkerYT = false
    let checkerJC = false
    let checkerFB = false
    let YToutletList = []
    let FBoutletList = []
    let streamName_ = null

    $(function() {
      $("#streamSettings").on("submit",function(e) { 
        e.preventDefault(); // stop submission
         
        $.post(this.action,$(this).serialize(),function() {
          $("input:checkbox[YToutletCredentials=type]:checked").each(function(){
            YToutletList.push($(this).val());
          });
          $("input:checkbox[FBoutletCredentials=type]:checked").each(function(){
            FBoutletList.push($(this).val());
            console.log(FBoutletList)
          });
        });   
      });   
    });
    
    var scheduleCheck = setInterval(function() {
      if (scheduleStatus.value === 'true') {
        document.getElementById("cancelStreamBtn").disabled = false;
        clearInterval(scheduleCheck);
      }
    }, 1);
    var streamCheck = setInterval(function() {
      if (streamStatus.value === 'Live') {
        document.getElementById("goStreamingPageBtn").disabled = false;
        clearInterval(streamCheck);
      }
    }, 1);

    function checkNameChange(){
      document.getElementById("convertName").value = document.getElementById("streamName").value
      if(streamName){
        document.getElementById("convertBtn").disabled = false;
        if (accr > 0){
            document.getElementById("streamNowBtn").disabled = false;
            document.getElementById("scheduleStreamBtn").disabled = false;
          } 
      }
    }
    function isANumber(str){
      return !/\D/.test(str);
    }
    function checkScheduleInput(){
      let month = document.getElementById("month").value
      let day = document.getElementById("day").value
      let hour = document.getElementById("hour").value
      let minute = document.getElementById("minute").value 
      console.log(month)
      console.log(!isANumber(month))

      if((month > 12 || month < 0 || !isANumber(month) ) 
      || (day > 31 || day < 1 || !isANumber(day)) 
      || (hour > 23 || hour < 1 || !isANumber(hour)) 
      || (minute > 59 || minute < 1|| !isANumber(minute)) ){
        alert("oops, you made a mistake on the input")
      } else {
        let form = document.getElementById("streamSettings")
        document.getElementById("streamSettings").addEventListener("click", function () {
        form.submit();
      })
      }
    }
    function clearSchedule(){
      document.getElementById("month").value = ''
      document.getElementById("day").value = ''
      document.getElementById("hour").value = ''
      document.getElementById("minute").value = ''
      let form = document.getElementById("streamSettings")
      document.getElementById("streamSettings").addEventListener("click", function () {
        form.submit();
      })
    }
    function enableBtnYT(){
      let streamName = document.getElementById("streamName").value
      if (checkerYT === false){
        checkerYT = true
        accr ++ 
        console.log(streamName)
          if (accr > 0 && streamName){
            document.getElementById("streamNowBtn").disabled = false;
            if(month.value && day.value && hour.value && minute.value){
            document.getElementById("scheduleStreamBtn").disabled = false;
            }
          } 
        } else {
          accr --
          console.log(streamName)
          checkerYT = false
          if (accr === 0){
            document.getElementById("streamNowBtn").disabled = true
            if(month.value && day.value && hour.value && minute.value){
              document.getElementById("scheduleStreamBtn").disabled = false;
            }
          }
        }
      }
    function enableBtnFB(){
      let streamName = document.getElementById("streamName").value
      if (checkerFB === false){
        checkerFB = true
        accr ++ 
        console.log(accr)
          if (accr > 0 && streamName){
            setTimeout(function(){ 
              let FBrtmp = document.getElementById("FBNowInputBox").value
              if(FBrtmp){
              document.getElementById("streamNowBtn").disabled = false;
                if(month.value && day.value && hour.value && minute.value){
                  document.getElementById("scheduleStreamBtn").disabled = false;
                }
              }
             }, 3000);
             document.getElementById("streamNowBtn").value = "Stream Now"
          } 
        } else {
          accr --
          console.log(accr)
          checkerFB = false
          if (accr === 0){
            document.getElementById("streamNowBtn").disabled = true
            document.getElementById("scheduleStreamBtn").disabled = true;
          }
        }
      }

      function checkSchedule(){
        if(month.value && day.value && hour.value && minute.value && streamName.value)
          document.getElementById("scheduleStreamBtn").disabled = false;
      }

  script.
    window.fbAsyncInit  = function()  {
    FB.init({
      appId             : '202133753681543',
      autoLogAppEvents  : true,
      xfbml             : true,
      version           : 'v2.12'
      });
      };

    function streamFB(pageId, accessToken, FBoutletName){
      FB.api(
        '/' + pageId + '/live_videos',
        'POST',
        {access_token: accessToken},
        function(response) {
            let rtmp = response.stream_url
            console.log(rtmp)
            console.log(response)
            let name = JSON.stringify(FBoutletName)
            document.getElementById(name).value =  rtmp
            document.getElementById("FBNowInputBox").value =  rtmp
        }
      );
    }
 
  script.
    (function(d, s, id){
      var js, fjs = d.getElementsByTagName(s)[0];
      if (d.getElementById(id)) {return;}
      js = d.createElement(s); js.id = id;
      js.src = "https://connect.facebook.net/en_US/sdk.js";
      fjs.parentNode.insertBefore(js, fjs);
    }(document, 'script', 'facebook-jssdk'));